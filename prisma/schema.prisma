generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "rhel-openssl-1.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Question {
  id            String         @id @default(cuid())
  slug          String         @unique
  title         String
  explanation   String?
  category      String
  difficulty    String
  active        Boolean        @default(true)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  answers       Answer[]
  examQuestions ExamQuestion[]
}

model Answer {
  id         String   @id @default(cuid())
  text       String
  isCorrect  Boolean
  questionId String
  question   Question @relation(fields: [questionId], references: [id])
}

model ExamSession {
  id             String         @id @default(cuid())
  studentName    String
  startedAt      DateTime       @default(now())
  completedAt    DateTime?
  score          Float?
  passed         Boolean?
  totalQuestions Int
  questions      ExamQuestion[]
}

model ExamQuestion {
  id            String      @id @default(cuid())
  examSessionId String
  questionId    String
  userAnswer    String?
  answeredAt    DateTime?
  order         Int
  examSession   ExamSession @relation(fields: [examSessionId], references: [id])
  question      Question    @relation(fields: [questionId], references: [id])

  @@unique([examSessionId, questionId])
}

model ExamSettings {
  id           String   @id @default(cuid())
  timerMinutes Int      @default(30)
  updatedAt    DateTime @updatedAt
}
