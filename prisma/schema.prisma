// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Question {
  id          String   @id @default(cuid())
  slug        String   @unique
  title       String
  answers     Answer[]
  explanation String
  category    String
  difficulty  String
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relation to ExamSession through ExamQuestion
  examQuestions ExamQuestion[]
}

model Answer {
  id         String   @id @default(cuid())
  text       String
  isCorrect  Boolean
  questionId String
  question   Question @relation(fields: [questionId], references: [id])
}

model ExamSession {
  id             String         @id @default(cuid())
  studentName    String
  startedAt      DateTime       @default(now())
  completedAt    DateTime?
  score          Float?
  passed         Boolean?
  questions      ExamQuestion[]
  totalQuestions Int
}

model ExamQuestion {
  id            String      @id @default(cuid())
  examSession   ExamSession @relation(fields: [examSessionId], references: [id])
  examSessionId String
  question      Question    @relation(fields: [questionId], references: [id])
  questionId    String
  userAnswer    String?
  answeredAt    DateTime?

  @@unique([examSessionId, questionId])
}
